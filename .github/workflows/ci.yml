# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: FSLab Test AWS CI/CD

on:
  push:
    branches: 
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 15
        cache: 'npm'
        cache-dependency-path: codebase/rdicidr-0.1.0/package-lock.json
    
    - name: Execute code
      working-directory: codebase/rdicidr-0.1.0
      run: npm install

    - name: Run Lint
      working-directory: codebase/rdicidr-0.1.0
      run: npm run lint
    
    - name: Run prettier
      working-directory: codebase/rdicidr-0.1.0
      run: npm run prettier || true

    - name: run test
      working-directory: codebase/rdicidr-0.1.0
      run: CI=true npm run test

    - name: run build
      working-directory: codebase/rdicidr-0.1.0
      run: npm run build --if-present
  
  deploy:
    
    name: Deploy_test
    runs-on: ubuntu-latest
    needs:  [build]

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./codebase/rdicidr-0.1.0
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      

